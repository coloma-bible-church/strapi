name: Build and deploy to Azure

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: yarn install, build, and test
        run: |
          yarn install --frozen-lockfile
          yarn run build
      
      - name: touch .env
        run: |
          touch .env

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: ${{ github.ref_name }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_app_name: 'website-${{ github.ref_name }}'
      TF_VAR_contact_link: 'https://www.colomabible.org/contact'
      TF_VAR_contact_to: ${{ secrets.CONTACT_TO }}
      TF_VAR_email_domain_id: ${{ secrets.EMAIL_DOMAIN_ID }}
      TF_VAR_region: 'northcentralus'
      TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
    outputs:
      app_name: ${{ env.TF_VAR_app_name }}

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: terraform fmt
        run: terraform fmt -check
      
      - name: terraform init
        run: terraform init -input=false -lockfile=readonly -backend-config="resource_group_name=${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}" -backend-config="storage_account_name=${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.BACKEND_CONTAINER_NAME }}" -backend-config="key=${{ env.TF_VAR_app_name }}.terraform.state"
      
      - name: terraform apply
        run: terraform apply -input=false -auto-approve

  deploy:
    runs-on: ubuntu-latest
    needs: [build, terraform]
    environment:
      name: ${{ github.ref_name }}
      url: '${{ steps.deploy-to-webapp.outputs.webapp-url }}'
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ needs.terraform.outputs.app_name }}
          package: release.zip
